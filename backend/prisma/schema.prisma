// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int                  @id @default(autoincrement())
  name          String
  role          Role               @default(USER)
  password      String
  email         String               @unique
  telephone     String               @unique
  amount        Int                  @default(0)
  subscriptions SubscriptionOnUser[]
  achievements  AchievenemtOnUser[]
  cards         Card[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

model Card {
  id        Int      @id @default(autoincrement())
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])
  number    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscription {
  id          Int                  @id @default(autoincrement())
  name        String
  price       Int
  description String
  user        SubscriptionOnUser[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

model Achievenemt {
  id        Int                 @id @default(autoincrement())
  name      String
  points    Int
  user      AchievenemtOnUser[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model AchievenemtOnUser {
  id      Int  @id @default(autoincrement())
  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  achievenemt_id Int
  achievenemt    Achievenemt @relation(fields: [achievenemt_id], references: [id])
}

model SubscriptionOnUser {
  id             Int          @id @default(autoincrement())
  User           User         @relation(fields: [user_id], references: [id])
  user_id        Int
  Subscription   Subscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([user_id, subscriptionId])
}

enum Role {
  USER
  ADMIN
  HR
}
