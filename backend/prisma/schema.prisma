// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  HR
  USER
  ADMIN
}

enum Category {
  MUSEUM
  OPERA
  MOVIE
  THEATER
  EXTRA
}

enum TicketStatus {
  BOOKED
  IN_QUEUE
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
  phone    String
  role     Role   @default(USER)

  blacklist Blacklist?
  tickets   Ticket[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blacklist {
  id     Int    @id @default(autoincrement())
  reason String @db.MediumText
  user   User   @relation(fields: [userId], references: [id])

  userId Int @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id Int @id @default(autoincrement())

  name             String
  description      String   @db.MediumText
  ticketType       String
  isReleased       Boolean  @default(false)
  imgUrl           String
  maxTickets       Int
  availableTickets Int
  category         Category

  tickets Ticket[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id Int @id @default(autoincrement())

  status TicketStatus
  user   User         @relation(fields: [userId], references: [id])
  event  Event        @relation(fields: [eventId], references: [id])

  userId  Int
  eventId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Podcast {
  id Int @id @default(autoincrement())

  name        String
  description String  @db.MediumText
  link        String?
  imgUrl      String
  startDate   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactRequest {
  id      Int    @id @default(autoincrement())
  email   String
  name    String
  subject String
  message String @db.MediumText

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sponsor {
  id          Int    @id @default(autoincrement())
  name        String
  description String @db.MediumText
  logoUrl     String
  link        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
